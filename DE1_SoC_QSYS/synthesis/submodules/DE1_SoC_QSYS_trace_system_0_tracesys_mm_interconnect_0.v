// DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2017.03.14.18:12:29

`timescale 1 ps / 1 ps
module DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0 (
		input  wire        clock0_out_clk_clk,                       //                     clock0_out_clk.clk
		input  wire        trans0_reset_reset_bridge_in_reset_reset, // trans0_reset_reset_bridge_in_reset.reset
		input  wire [8:0]  trans0_master_address,                    //                      trans0_master.address
		output wire        trans0_master_waitrequest,                //                                   .waitrequest
		input  wire        trans0_master_read,                       //                                   .read
		output wire [31:0] trans0_master_readdata,                   //                                   .readdata
		output wire        trans0_master_readdatavalid,              //                                   .readdatavalid
		input  wire        trans0_master_write,                      //                                   .write
		input  wire [31:0] trans0_master_writedata,                  //                                   .writedata
		output wire [7:0]  bridge_0_s0_address,                      //                        bridge_0_s0.address
		output wire        bridge_0_s0_write,                        //                                   .write
		output wire        bridge_0_s0_read,                         //                                   .read
		input  wire [31:0] bridge_0_s0_readdata,                     //                                   .readdata
		output wire [31:0] bridge_0_s0_writedata,                    //                                   .writedata
		output wire [0:0]  bridge_0_s0_burstcount,                   //                                   .burstcount
		output wire [3:0]  bridge_0_s0_byteenable,                   //                                   .byteenable
		input  wire        bridge_0_s0_readdatavalid,                //                                   .readdatavalid
		input  wire        bridge_0_s0_waitrequest,                  //                                   .waitrequest
		output wire        bridge_0_s0_debugaccess,                  //                                   .debugaccess
		output wire [7:0]  bridge_1_s0_address,                      //                        bridge_1_s0.address
		output wire        bridge_1_s0_write,                        //                                   .write
		output wire        bridge_1_s0_read,                         //                                   .read
		input  wire [31:0] bridge_1_s0_readdata,                     //                                   .readdata
		output wire [31:0] bridge_1_s0_writedata,                    //                                   .writedata
		output wire [0:0]  bridge_1_s0_burstcount,                   //                                   .burstcount
		output wire [3:0]  bridge_1_s0_byteenable,                   //                                   .byteenable
		input  wire        bridge_1_s0_readdatavalid,                //                                   .readdatavalid
		input  wire        bridge_1_s0_waitrequest,                  //                                   .waitrequest
		output wire        bridge_1_s0_debugaccess,                  //                                   .debugaccess
		output wire [5:0]  capture_csr_slave_address,                //                  capture_csr_slave.address
		output wire        capture_csr_slave_write,                  //                                   .write
		output wire        capture_csr_slave_read,                   //                                   .read
		input  wire [31:0] capture_csr_slave_readdata,               //                                   .readdata
		output wire [31:0] capture_csr_slave_writedata,              //                                   .writedata
		output wire [2:0]  rom_rom_address,                          //                            rom_rom.address
		output wire        rom_rom_read,                             //                                   .read
		input  wire [31:0] rom_rom_readdata                          //                                   .readdata
	);

	wire         trans0_master_translator_avalon_universal_master_0_waitrequest;                         // trans0_master_translator_avalon_universal_master_0_agent:av_waitrequest -> trans0_master_translator:uav_waitrequest
	wire   [2:0] trans0_master_translator_avalon_universal_master_0_burstcount;                          // trans0_master_translator:uav_burstcount -> trans0_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] trans0_master_translator_avalon_universal_master_0_writedata;                           // trans0_master_translator:uav_writedata -> trans0_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [10:0] trans0_master_translator_avalon_universal_master_0_address;                             // trans0_master_translator:uav_address -> trans0_master_translator_avalon_universal_master_0_agent:av_address
	wire         trans0_master_translator_avalon_universal_master_0_lock;                                // trans0_master_translator:uav_lock -> trans0_master_translator_avalon_universal_master_0_agent:av_lock
	wire         trans0_master_translator_avalon_universal_master_0_write;                               // trans0_master_translator:uav_write -> trans0_master_translator_avalon_universal_master_0_agent:av_write
	wire         trans0_master_translator_avalon_universal_master_0_read;                                // trans0_master_translator:uav_read -> trans0_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] trans0_master_translator_avalon_universal_master_0_readdata;                            // trans0_master_translator_avalon_universal_master_0_agent:av_readdata -> trans0_master_translator:uav_readdata
	wire         trans0_master_translator_avalon_universal_master_0_debugaccess;                         // trans0_master_translator:uav_debugaccess -> trans0_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] trans0_master_translator_avalon_universal_master_0_byteenable;                          // trans0_master_translator:uav_byteenable -> trans0_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         trans0_master_translator_avalon_universal_master_0_readdatavalid;                       // trans0_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> trans0_master_translator:uav_readdatavalid
	wire         rom_rom_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // rom_rom_translator:uav_waitrequest -> rom_rom_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] rom_rom_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // rom_rom_translator_avalon_universal_slave_0_agent:m0_burstcount -> rom_rom_translator:uav_burstcount
	wire  [31:0] rom_rom_translator_avalon_universal_slave_0_agent_m0_writedata;                         // rom_rom_translator_avalon_universal_slave_0_agent:m0_writedata -> rom_rom_translator:uav_writedata
	wire  [10:0] rom_rom_translator_avalon_universal_slave_0_agent_m0_address;                           // rom_rom_translator_avalon_universal_slave_0_agent:m0_address -> rom_rom_translator:uav_address
	wire         rom_rom_translator_avalon_universal_slave_0_agent_m0_write;                             // rom_rom_translator_avalon_universal_slave_0_agent:m0_write -> rom_rom_translator:uav_write
	wire         rom_rom_translator_avalon_universal_slave_0_agent_m0_lock;                              // rom_rom_translator_avalon_universal_slave_0_agent:m0_lock -> rom_rom_translator:uav_lock
	wire         rom_rom_translator_avalon_universal_slave_0_agent_m0_read;                              // rom_rom_translator_avalon_universal_slave_0_agent:m0_read -> rom_rom_translator:uav_read
	wire  [31:0] rom_rom_translator_avalon_universal_slave_0_agent_m0_readdata;                          // rom_rom_translator:uav_readdata -> rom_rom_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         rom_rom_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // rom_rom_translator:uav_readdatavalid -> rom_rom_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         rom_rom_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // rom_rom_translator_avalon_universal_slave_0_agent:m0_debugaccess -> rom_rom_translator:uav_debugaccess
	wire   [3:0] rom_rom_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // rom_rom_translator_avalon_universal_slave_0_agent:m0_byteenable -> rom_rom_translator:uav_byteenable
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // rom_rom_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // rom_rom_translator_avalon_universal_slave_0_agent:rf_source_valid -> rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // rom_rom_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] rom_rom_translator_avalon_universal_slave_0_agent_rf_source_data;                       // rom_rom_translator_avalon_universal_slave_0_agent:rf_source_data -> rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> rom_rom_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> rom_rom_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> rom_rom_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> rom_rom_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> rom_rom_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // rom_rom_translator_avalon_universal_slave_0_agent:rf_sink_ready -> rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // rom_rom_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> rom_rom_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // rom_rom_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> rom_rom_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // rom_rom_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> rom_rom_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                           // cmd_xbar_mux:src_endofpacket -> rom_rom_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                 // cmd_xbar_mux:src_valid -> rom_rom_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                         // cmd_xbar_mux:src_startofpacket -> rom_rom_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] cmd_xbar_mux_src_data;                                                                  // cmd_xbar_mux:src_data -> rom_rom_translator_avalon_universal_slave_0_agent:cp_data
	wire   [3:0] cmd_xbar_mux_src_channel;                                                               // cmd_xbar_mux:src_channel -> rom_rom_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                 // rom_rom_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // capture_csr_slave_translator:uav_waitrequest -> capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> capture_csr_slave_translator:uav_burstcount
	wire  [31:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> capture_csr_slave_translator:uav_writedata
	wire  [10:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_address -> capture_csr_slave_translator:uav_address
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_write -> capture_csr_slave_translator:uav_write
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_lock -> capture_csr_slave_translator:uav_lock
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_read -> capture_csr_slave_translator:uav_read
	wire  [31:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // capture_csr_slave_translator:uav_readdata -> capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // capture_csr_slave_translator:uav_readdatavalid -> capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> capture_csr_slave_translator:uav_debugaccess
	wire   [3:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // capture_csr_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> capture_csr_slave_translator:uav_byteenable
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // capture_csr_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // capture_csr_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // capture_csr_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // capture_csr_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                       // cmd_xbar_mux_001:src_endofpacket -> capture_csr_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                             // cmd_xbar_mux_001:src_valid -> capture_csr_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                     // cmd_xbar_mux_001:src_startofpacket -> capture_csr_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] cmd_xbar_mux_001_src_data;                                                              // cmd_xbar_mux_001:src_data -> capture_csr_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [3:0] cmd_xbar_mux_001_src_channel;                                                           // cmd_xbar_mux_001:src_channel -> capture_csr_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                             // capture_csr_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                   // bridge_0_s0_translator:uav_waitrequest -> bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                    // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> bridge_0_s0_translator:uav_burstcount
	wire  [31:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                     // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> bridge_0_s0_translator:uav_writedata
	wire  [10:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_address;                       // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_address -> bridge_0_s0_translator:uav_address
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_write;                         // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_write -> bridge_0_s0_translator:uav_write
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_lock;                          // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_lock -> bridge_0_s0_translator:uav_lock
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_read;                          // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_read -> bridge_0_s0_translator:uav_read
	wire  [31:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                      // bridge_0_s0_translator:uav_readdata -> bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                 // bridge_0_s0_translator:uav_readdatavalid -> bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                   // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bridge_0_s0_translator:uav_debugaccess
	wire   [3:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                    // bridge_0_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> bridge_0_s0_translator:uav_byteenable
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;            // bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                  // bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;          // bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                   // bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                  // bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;         // bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;               // bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;       // bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                // bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;               // bridge_0_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;             // bridge_0_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;              // bridge_0_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;             // bridge_0_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                       // cmd_xbar_mux_002:src_endofpacket -> bridge_0_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                             // cmd_xbar_mux_002:src_valid -> bridge_0_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                     // cmd_xbar_mux_002:src_startofpacket -> bridge_0_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] cmd_xbar_mux_002_src_data;                                                              // cmd_xbar_mux_002:src_data -> bridge_0_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire   [3:0] cmd_xbar_mux_002_src_channel;                                                           // cmd_xbar_mux_002:src_channel -> bridge_0_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_002_src_ready;                                                             // bridge_0_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                   // bridge_1_s0_translator:uav_waitrequest -> bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                    // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> bridge_1_s0_translator:uav_burstcount
	wire  [31:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                     // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> bridge_1_s0_translator:uav_writedata
	wire  [10:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_address;                       // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_address -> bridge_1_s0_translator:uav_address
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_write;                         // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_write -> bridge_1_s0_translator:uav_write
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_lock;                          // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_lock -> bridge_1_s0_translator:uav_lock
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_read;                          // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_read -> bridge_1_s0_translator:uav_read
	wire  [31:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                      // bridge_1_s0_translator:uav_readdata -> bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                 // bridge_1_s0_translator:uav_readdatavalid -> bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                   // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bridge_1_s0_translator:uav_debugaccess
	wire   [3:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                    // bridge_1_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> bridge_1_s0_translator:uav_byteenable
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;            // bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                  // bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;          // bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                   // bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                  // bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;         // bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;               // bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;       // bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                // bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;               // bridge_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;             // bridge_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;              // bridge_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;             // bridge_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                       // cmd_xbar_mux_003:src_endofpacket -> bridge_1_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                             // cmd_xbar_mux_003:src_valid -> bridge_1_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                     // cmd_xbar_mux_003:src_startofpacket -> bridge_1_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] cmd_xbar_mux_003_src_data;                                                              // cmd_xbar_mux_003:src_data -> bridge_1_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire   [3:0] cmd_xbar_mux_003_src_channel;                                                           // cmd_xbar_mux_003:src_channel -> bridge_1_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_003_src_ready;                                                             // bridge_1_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire         trans0_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                // trans0_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         trans0_master_translator_avalon_universal_master_0_agent_cp_valid;                      // trans0_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         trans0_master_translator_avalon_universal_master_0_agent_cp_startofpacket;              // trans0_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [82:0] trans0_master_translator_avalon_universal_master_0_agent_cp_data;                       // trans0_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         trans0_master_translator_avalon_universal_master_0_agent_cp_ready;                      // addr_router:sink_ready -> trans0_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // rom_rom_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rp_valid;                             // rom_rom_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // rom_rom_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [82:0] rom_rom_translator_avalon_universal_slave_0_agent_rp_data;                              // rom_rom_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         rom_rom_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router:sink_ready -> rom_rom_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                              // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                    // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                            // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [82:0] id_router_src_data;                                                                     // id_router:src_data -> rsp_xbar_demux:sink_data
	wire   [3:0] id_router_src_channel;                                                                  // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                    // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // capture_csr_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // capture_csr_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // capture_csr_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [82:0] capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // capture_csr_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_001:sink_ready -> capture_csr_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                          // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                        // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [82:0] id_router_001_src_data;                                                                 // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire   [3:0] id_router_001_src_channel;                                                              // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                   // bridge_0_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_valid;                         // bridge_0_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                 // bridge_0_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [82:0] bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_data;                          // bridge_0_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire         bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_ready;                         // id_router_002:sink_ready -> bridge_0_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_002_src_endofpacket;                                                          // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                        // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [82:0] id_router_002_src_data;                                                                 // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire   [3:0] id_router_002_src_channel;                                                              // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                   // bridge_1_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_valid;                         // bridge_1_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                 // bridge_1_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [82:0] bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_data;                          // bridge_1_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire         bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_ready;                         // id_router_003:sink_ready -> bridge_1_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_003_src_endofpacket;                                                          // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                        // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [82:0] id_router_003_src_data;                                                                 // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire   [3:0] id_router_003_src_channel;                                                              // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         addr_router_src_endofpacket;                                                            // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire         addr_router_src_valid;                                                                  // addr_router:src_valid -> limiter:cmd_sink_valid
	wire         addr_router_src_startofpacket;                                                          // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [82:0] addr_router_src_data;                                                                   // addr_router:src_data -> limiter:cmd_sink_data
	wire   [3:0] addr_router_src_channel;                                                                // addr_router:src_channel -> limiter:cmd_sink_channel
	wire         addr_router_src_ready;                                                                  // limiter:cmd_sink_ready -> addr_router:src_ready
	wire         limiter_cmd_src_endofpacket;                                                            // limiter:cmd_src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         limiter_cmd_src_startofpacket;                                                          // limiter:cmd_src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [82:0] limiter_cmd_src_data;                                                                   // limiter:cmd_src_data -> cmd_xbar_demux:sink_data
	wire   [3:0] limiter_cmd_src_channel;                                                                // limiter:cmd_src_channel -> cmd_xbar_demux:sink_channel
	wire         limiter_cmd_src_ready;                                                                  // cmd_xbar_demux:sink_ready -> limiter:cmd_src_ready
	wire         rsp_xbar_mux_src_endofpacket;                                                           // rsp_xbar_mux:src_endofpacket -> limiter:rsp_sink_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                 // rsp_xbar_mux:src_valid -> limiter:rsp_sink_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                         // rsp_xbar_mux:src_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [82:0] rsp_xbar_mux_src_data;                                                                  // rsp_xbar_mux:src_data -> limiter:rsp_sink_data
	wire   [3:0] rsp_xbar_mux_src_channel;                                                               // rsp_xbar_mux:src_channel -> limiter:rsp_sink_channel
	wire         rsp_xbar_mux_src_ready;                                                                 // limiter:rsp_sink_ready -> rsp_xbar_mux:src_ready
	wire         limiter_rsp_src_endofpacket;                                                            // limiter:rsp_src_endofpacket -> trans0_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         limiter_rsp_src_valid;                                                                  // limiter:rsp_src_valid -> trans0_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         limiter_rsp_src_startofpacket;                                                          // limiter:rsp_src_startofpacket -> trans0_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [82:0] limiter_rsp_src_data;                                                                   // limiter:rsp_src_data -> trans0_master_translator_avalon_universal_master_0_agent:rp_data
	wire   [3:0] limiter_rsp_src_channel;                                                                // limiter:rsp_src_channel -> trans0_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         limiter_rsp_src_ready;                                                                  // trans0_master_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                        // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                              // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                      // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src0_data;                                                               // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire   [3:0] cmd_xbar_demux_src0_channel;                                                            // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                              // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                        // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                              // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                      // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src1_data;                                                               // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire   [3:0] cmd_xbar_demux_src1_channel;                                                            // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                              // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_src2_endofpacket;                                                        // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_src2_valid;                                                              // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_src2_startofpacket;                                                      // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src2_data;                                                               // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire   [3:0] cmd_xbar_demux_src2_channel;                                                            // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_src2_ready;                                                              // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire         cmd_xbar_demux_src3_endofpacket;                                                        // cmd_xbar_demux:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_src3_valid;                                                              // cmd_xbar_demux:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_src3_startofpacket;                                                      // cmd_xbar_demux:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src3_data;                                                               // cmd_xbar_demux:src3_data -> cmd_xbar_mux_003:sink0_data
	wire   [3:0] cmd_xbar_demux_src3_channel;                                                            // cmd_xbar_demux:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_src3_ready;                                                              // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux:src3_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                        // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                              // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                      // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [82:0] rsp_xbar_demux_src0_data;                                                               // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire   [3:0] rsp_xbar_demux_src0_channel;                                                            // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                              // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                    // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                          // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                  // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [82:0] rsp_xbar_demux_001_src0_data;                                                           // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire   [3:0] rsp_xbar_demux_001_src0_channel;                                                        // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                          // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                    // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                          // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                  // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire  [82:0] rsp_xbar_demux_002_src0_data;                                                           // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire   [3:0] rsp_xbar_demux_002_src0_channel;                                                        // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                          // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                    // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                          // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                  // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux:sink3_startofpacket
	wire  [82:0] rsp_xbar_demux_003_src0_data;                                                           // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux:sink3_data
	wire   [3:0] rsp_xbar_demux_003_src0_channel;                                                        // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                          // rsp_xbar_mux:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire   [3:0] limiter_cmd_valid_data;                                                                 // limiter:cmd_src_valid -> cmd_xbar_demux:sink_valid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (9),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (11),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (0),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) trans0_master_translator (
		.clk                      (clock0_out_clk_clk),                                               //                       clk.clk
		.reset                    (trans0_reset_reset_bridge_in_reset_reset),                         //                     reset.reset
		.uav_address              (trans0_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (trans0_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (trans0_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (trans0_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (trans0_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (trans0_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (trans0_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (trans0_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (trans0_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (trans0_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (trans0_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (trans0_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (trans0_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (trans0_master_read),                                               //                          .read
		.av_readdata              (trans0_master_readdata),                                           //                          .readdata
		.av_readdatavalid         (trans0_master_readdatavalid),                                      //                          .readdatavalid
		.av_write                 (trans0_master_write),                                              //                          .write
		.av_writedata             (trans0_master_writedata),                                          //                          .writedata
		.av_burstcount            (1'b1),                                                             //               (terminated)
		.av_byteenable            (4'b1111),                                                          //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                             //               (terminated)
		.av_begintransfer         (1'b0),                                                             //               (terminated)
		.av_chipselect            (1'b0),                                                             //               (terminated)
		.av_lock                  (1'b0),                                                             //               (terminated)
		.av_debugaccess           (1'b0),                                                             //               (terminated)
		.uav_clken                (),                                                                 //               (terminated)
		.av_clken                 (1'b1),                                                             //               (terminated)
		.uav_response             (2'b00),                                                            //               (terminated)
		.av_response              (),                                                                 //               (terminated)
		.uav_writeresponserequest (),                                                                 //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                             //               (terminated)
		.av_writeresponserequest  (1'b0),                                                             //               (terminated)
		.av_writeresponsevalid    ()                                                                  //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (2),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) rom_rom_translator (
		.clk                      (clock0_out_clk_clk),                                                 //                      clk.clk
		.reset                    (trans0_reset_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (rom_rom_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (rom_rom_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (rom_rom_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (rom_rom_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (rom_rom_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (rom_rom_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (rom_rom_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (rom_rom_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (rom_rom_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (rom_rom_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (rom_rom_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (rom_rom_address),                                                    //      avalon_anti_slave_0.address
		.av_read                  (rom_rom_read),                                                       //                         .read
		.av_readdata              (rom_rom_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                   //              (terminated)
		.av_writedata             (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_chipselect            (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (6),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (2),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) capture_csr_slave_translator (
		.clk                      (clock0_out_clk_clk),                                                           //                      clk.clk
		.reset                    (trans0_reset_reset_bridge_in_reset_reset),                                     //                    reset.reset
		.uav_address              (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (capture_csr_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (capture_csr_slave_write),                                                      //                         .write
		.av_read                  (capture_csr_slave_read),                                                       //                         .read
		.av_readdata              (capture_csr_slave_readdata),                                                   //                         .readdata
		.av_writedata             (capture_csr_slave_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_byteenable            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.av_chipselect            (),                                                                             //              (terminated)
		.av_clken                 (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bridge_0_s0_translator (
		.clk                      (clock0_out_clk_clk),                                                     //                      clk.clk
		.reset                    (trans0_reset_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bridge_0_s0_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bridge_0_s0_write),                                                      //                         .write
		.av_read                  (bridge_0_s0_read),                                                       //                         .read
		.av_readdata              (bridge_0_s0_readdata),                                                   //                         .readdata
		.av_writedata             (bridge_0_s0_writedata),                                                  //                         .writedata
		.av_burstcount            (bridge_0_s0_burstcount),                                                 //                         .burstcount
		.av_byteenable            (bridge_0_s0_byteenable),                                                 //                         .byteenable
		.av_readdatavalid         (bridge_0_s0_readdatavalid),                                              //                         .readdatavalid
		.av_waitrequest           (bridge_0_s0_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (bridge_0_s0_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_chipselect            (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bridge_1_s0_translator (
		.clk                      (clock0_out_clk_clk),                                                     //                      clk.clk
		.reset                    (trans0_reset_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bridge_1_s0_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bridge_1_s0_write),                                                      //                         .write
		.av_read                  (bridge_1_s0_read),                                                       //                         .read
		.av_readdata              (bridge_1_s0_readdata),                                                   //                         .readdata
		.av_writedata             (bridge_1_s0_writedata),                                                  //                         .writedata
		.av_burstcount            (bridge_1_s0_burstcount),                                                 //                         .burstcount
		.av_byteenable            (bridge_1_s0_byteenable),                                                 //                         .byteenable
		.av_readdatavalid         (bridge_1_s0_readdatavalid),                                              //                         .readdatavalid
		.av_waitrequest           (bridge_1_s0_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (bridge_1_s0_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_chipselect            (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_BEGIN_BURST           (64),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_BURST_TYPE_H          (61),
		.PKT_BURST_TYPE_L          (60),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_TRANS_EXCLUSIVE       (52),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (67),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (68),
		.PKT_THREAD_ID_H           (70),
		.PKT_THREAD_ID_L           (70),
		.PKT_CACHE_H               (77),
		.PKT_CACHE_L               (74),
		.PKT_DATA_SIDEBAND_H       (63),
		.PKT_DATA_SIDEBAND_L       (63),
		.PKT_QOS_H                 (65),
		.PKT_QOS_L                 (65),
		.PKT_ADDR_SIDEBAND_H       (62),
		.PKT_ADDR_SIDEBAND_L       (62),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_DATA_W                 (83),
		.ST_CHANNEL_W              (4),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) trans0_master_translator_avalon_universal_master_0_agent (
		.clk                     (clock0_out_clk_clk),                                                        //       clk.clk
		.reset                   (trans0_reset_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.av_address              (trans0_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (trans0_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (trans0_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (trans0_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (trans0_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (trans0_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (trans0_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (trans0_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (trans0_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (trans0_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (trans0_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (trans0_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (trans0_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (trans0_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (trans0_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (trans0_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                     //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                      //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                   //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                             //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                               //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                     //          .ready
		.av_response             (),                                                                          // (terminated)
		.av_writeresponserequest (1'b0),                                                                      // (terminated)
		.av_writeresponsevalid   ()                                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (67),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (68),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (4),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) rom_rom_translator_avalon_universal_slave_0_agent (
		.clk                     (clock0_out_clk_clk),                                                           //             clk.clk
		.reset                   (trans0_reset_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (rom_rom_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (rom_rom_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (rom_rom_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (rom_rom_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (rom_rom_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (rom_rom_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (rom_rom_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (rom_rom_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (rom_rom_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (rom_rom_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (rom_rom_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (rom_rom_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (rom_rom_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (rom_rom_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (rom_rom_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (rom_rom_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                     //                .channel
		.rf_sink_ready           (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (rom_rom_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock0_out_clk_clk),                                                           //       clk.clk
		.reset             (trans0_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (rom_rom_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (rom_rom_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (67),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (68),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (4),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) capture_csr_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clock0_out_clk_clk),                                                                     //             clk.clk
		.reset                   (trans0_reset_reset_bridge_in_reset_reset),                                               //       clk_reset.reset
		.m0_address              (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (capture_csr_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                           //                .channel
		.rf_sink_ready           (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (capture_csr_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock0_out_clk_clk),                                                                     //       clk.clk
		.reset             (trans0_reset_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.in_data           (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (capture_csr_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (capture_csr_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (67),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (68),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (4),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bridge_0_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (clock0_out_clk_clk),                                                               //             clk.clk
		.reset                   (trans0_reset_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bridge_0_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                     //                .channel
		.rf_sink_ready           (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bridge_0_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock0_out_clk_clk),                                                               //       clk.clk
		.reset             (trans0_reset_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bridge_0_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bridge_0_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (67),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (68),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (4),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bridge_1_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (clock0_out_clk_clk),                                                               //             clk.clk
		.reset                   (trans0_reset_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bridge_1_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                     //                .channel
		.rf_sink_ready           (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bridge_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock0_out_clk_clk),                                                               //       clk.clk
		.reset             (trans0_reset_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bridge_1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bridge_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (trans0_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (trans0_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (trans0_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (trans0_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (trans0_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clock0_out_clk_clk),                                                        //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                     //       src.ready
		.src_valid          (addr_router_src_valid),                                                     //          .valid
		.src_data           (addr_router_src_data),                                                      //          .data
		.src_channel        (addr_router_src_channel),                                                   //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                             //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_id_router id_router (
		.sink_ready         (rom_rom_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (rom_rom_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (rom_rom_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (rom_rom_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (rom_rom_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock0_out_clk_clk),                                                 //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                //       src.ready
		.src_valid          (id_router_src_valid),                                                //          .valid
		.src_data           (id_router_src_data),                                                 //          .data
		.src_channel        (id_router_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_id_router id_router_001 (
		.sink_ready         (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (capture_csr_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock0_out_clk_clk),                                                           //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                      //       src.ready
		.src_valid          (id_router_001_src_valid),                                                      //          .valid
		.src_data           (id_router_001_src_data),                                                       //          .data
		.src_channel        (id_router_001_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                 //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_id_router id_router_002 (
		.sink_ready         (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bridge_0_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock0_out_clk_clk),                                                     //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                //       src.ready
		.src_valid          (id_router_002_src_valid),                                                //          .valid
		.src_data           (id_router_002_src_data),                                                 //          .data
		.src_channel        (id_router_002_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_id_router id_router_003 (
		.sink_ready         (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bridge_1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock0_out_clk_clk),                                                     //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                //       src.ready
		.src_valid          (id_router_003_src_valid),                                                //          .valid
		.src_data           (id_router_003_src_data),                                                 //          .data
		.src_channel        (id_router_003_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                           //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (68),
		.PKT_SRC_ID_H              (67),
		.PKT_SRC_ID_L              (66),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.MAX_OUTSTANDING_RESPONSES (2),
		.PIPELINED                 (0),
		.ST_DATA_W                 (83),
		.ST_CHANNEL_W              (4),
		.VALID_WIDTH               (4),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (clock0_out_clk_clk),                       //       clk.clk
		.reset                  (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                    //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                    //          .valid
		.cmd_sink_data          (addr_router_src_data),                     //          .data
		.cmd_sink_channel       (addr_router_src_channel),                  //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),            //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),              //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                    //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                     //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                  //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),            //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),              //          .endofpacket
		.rsp_sink_ready         (rsp_xbar_mux_src_ready),                   //  rsp_sink.ready
		.rsp_sink_valid         (rsp_xbar_mux_src_valid),                   //          .valid
		.rsp_sink_channel       (rsp_xbar_mux_src_channel),                 //          .channel
		.rsp_sink_data          (rsp_xbar_mux_src_data),                    //          .data
		.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),           //          .startofpacket
		.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),             //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                    //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                    //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                     //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                  //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),            //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),              //          .endofpacket
		.cmd_src_valid          (limiter_cmd_valid_data)                    // cmd_valid.data
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clock0_out_clk_clk),                       //        clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready         (limiter_cmd_src_ready),                    //       sink.ready
		.sink_channel       (limiter_cmd_src_channel),                  //           .channel
		.sink_data          (limiter_cmd_src_data),                     //           .data
		.sink_startofpacket (limiter_cmd_src_startofpacket),            //           .startofpacket
		.sink_endofpacket   (limiter_cmd_src_endofpacket),              //           .endofpacket
		.sink_valid         (limiter_cmd_valid_data),                   // sink_valid.data
		.src0_ready         (cmd_xbar_demux_src0_ready),                //       src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                //           .valid
		.src0_data          (cmd_xbar_demux_src0_data),                 //           .data
		.src0_channel       (cmd_xbar_demux_src0_channel),              //           .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //           .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),          //           .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                //       src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                //           .valid
		.src1_data          (cmd_xbar_demux_src1_data),                 //           .data
		.src1_channel       (cmd_xbar_demux_src1_channel),              //           .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),        //           .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket),          //           .endofpacket
		.src2_ready         (cmd_xbar_demux_src2_ready),                //       src2.ready
		.src2_valid         (cmd_xbar_demux_src2_valid),                //           .valid
		.src2_data          (cmd_xbar_demux_src2_data),                 //           .data
		.src2_channel       (cmd_xbar_demux_src2_channel),              //           .channel
		.src2_startofpacket (cmd_xbar_demux_src2_startofpacket),        //           .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_src2_endofpacket),          //           .endofpacket
		.src3_ready         (cmd_xbar_demux_src3_ready),                //       src3.ready
		.src3_valid         (cmd_xbar_demux_src3_valid),                //           .valid
		.src3_data          (cmd_xbar_demux_src3_data),                 //           .data
		.src3_channel       (cmd_xbar_demux_src3_channel),              //           .channel
		.src3_startofpacket (cmd_xbar_demux_src3_startofpacket),        //           .startofpacket
		.src3_endofpacket   (cmd_xbar_demux_src3_endofpacket)           //           .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clock0_out_clk_clk),                       //       clk.clk
		.reset               (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                   //          .valid
		.src_data            (cmd_xbar_mux_src_data),                    //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clock0_out_clk_clk),                       //       clk.clk
		.reset               (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (clock0_out_clk_clk),                       //       clk.clk
		.reset               (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket)           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_003 (
		.clk                 (clock0_out_clk_clk),                       //       clk.clk
		.reset               (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src3_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src3_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src3_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src3_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src3_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src3_endofpacket)           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux (
		.clk                (clock0_out_clk_clk),                       //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                      //      sink.ready
		.sink_channel       (id_router_src_channel),                    //          .channel
		.sink_data          (id_router_src_data),                       //          .data
		.sink_startofpacket (id_router_src_startofpacket),              //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                //          .endofpacket
		.sink_valid         (id_router_src_valid),                      //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)           //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (clock0_out_clk_clk),                       //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                  //      sink.ready
		.sink_channel       (id_router_001_src_channel),                //          .channel
		.sink_data          (id_router_001_src_data),                   //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)       //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (clock0_out_clk_clk),                       //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                  //      sink.ready
		.sink_channel       (id_router_002_src_channel),                //          .channel
		.sink_data          (id_router_002_src_data),                   //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)       //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_003 (
		.clk                (clock0_out_clk_clk),                       //       clk.clk
		.reset              (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                  //      sink.ready
		.sink_channel       (id_router_003_src_channel),                //          .channel
		.sink_data          (id_router_003_src_data),                   //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)       //          .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_tracesys_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clock0_out_clk_clk),                       //       clk.clk
		.reset               (trans0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                   //          .valid
		.src_data            (rsp_xbar_mux_src_data),                    //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),          //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),            //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),      //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src0_ready),            //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src0_valid),            //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src0_channel),          //          .channel
		.sink2_data          (rsp_xbar_demux_002_src0_data),             //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src0_startofpacket),    //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),      //          .endofpacket
		.sink3_ready         (rsp_xbar_demux_003_src0_ready),            //     sink3.ready
		.sink3_valid         (rsp_xbar_demux_003_src0_valid),            //          .valid
		.sink3_channel       (rsp_xbar_demux_003_src0_channel),          //          .channel
		.sink3_data          (rsp_xbar_demux_003_src0_data),             //          .data
		.sink3_startofpacket (rsp_xbar_demux_003_src0_startofpacket),    //          .startofpacket
		.sink3_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)       //          .endofpacket
	);

endmodule
