// DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2017.03.14.18:12:28

`timescale 1 ps / 1 ps
module DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0 (
		input  wire        clock_bridge_out_clk_clk,                         //                       clock_bridge_out_clk.clk
		input  wire        control_bridge_reset_reset_bridge_in_reset_reset, // control_bridge_reset_reset_bridge_in_reset.reset
		input  wire [7:0]  control_bridge_m0_address,                        //                          control_bridge_m0.address
		output wire        control_bridge_m0_waitrequest,                    //                                           .waitrequest
		input  wire [0:0]  control_bridge_m0_burstcount,                     //                                           .burstcount
		input  wire [3:0]  control_bridge_m0_byteenable,                     //                                           .byteenable
		input  wire        control_bridge_m0_read,                           //                                           .read
		output wire [31:0] control_bridge_m0_readdata,                       //                                           .readdata
		output wire        control_bridge_m0_readdatavalid,                  //                                           .readdatavalid
		input  wire        control_bridge_m0_write,                          //                                           .write
		input  wire [31:0] control_bridge_m0_writedata,                      //                                           .writedata
		input  wire        control_bridge_m0_debugaccess,                    //                                           .debugaccess
		output wire [3:0]  monitor_csr_s_address,                            //                              monitor_csr_s.address
		output wire        monitor_csr_s_write,                              //                                           .write
		output wire        monitor_csr_s_read,                               //                                           .read
		input  wire [31:0] monitor_csr_s_readdata,                           //                                           .readdata
		output wire [31:0] monitor_csr_s_writedata,                          //                                           .writedata
		output wire [3:0]  pixel_monitor_csr_s_address,                      //                        pixel_monitor_csr_s.address
		output wire        pixel_monitor_csr_s_write,                        //                                           .write
		output wire        pixel_monitor_csr_s_read,                         //                                           .read
		input  wire [31:0] pixel_monitor_csr_s_readdata,                     //                                           .readdata
		output wire [31:0] pixel_monitor_csr_s_writedata                     //                                           .writedata
	);

	wire         control_bridge_m0_translator_avalon_universal_master_0_waitrequest;                       // control_bridge_m0_translator_avalon_universal_master_0_agent:av_waitrequest -> control_bridge_m0_translator:uav_waitrequest
	wire   [2:0] control_bridge_m0_translator_avalon_universal_master_0_burstcount;                        // control_bridge_m0_translator:uav_burstcount -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] control_bridge_m0_translator_avalon_universal_master_0_writedata;                         // control_bridge_m0_translator:uav_writedata -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_writedata
	wire   [7:0] control_bridge_m0_translator_avalon_universal_master_0_address;                           // control_bridge_m0_translator:uav_address -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_address
	wire         control_bridge_m0_translator_avalon_universal_master_0_lock;                              // control_bridge_m0_translator:uav_lock -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_lock
	wire         control_bridge_m0_translator_avalon_universal_master_0_write;                             // control_bridge_m0_translator:uav_write -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_write
	wire         control_bridge_m0_translator_avalon_universal_master_0_read;                              // control_bridge_m0_translator:uav_read -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] control_bridge_m0_translator_avalon_universal_master_0_readdata;                          // control_bridge_m0_translator_avalon_universal_master_0_agent:av_readdata -> control_bridge_m0_translator:uav_readdata
	wire         control_bridge_m0_translator_avalon_universal_master_0_debugaccess;                       // control_bridge_m0_translator:uav_debugaccess -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] control_bridge_m0_translator_avalon_universal_master_0_byteenable;                        // control_bridge_m0_translator:uav_byteenable -> control_bridge_m0_translator_avalon_universal_master_0_agent:av_byteenable
	wire         control_bridge_m0_translator_avalon_universal_master_0_readdatavalid;                     // control_bridge_m0_translator_avalon_universal_master_0_agent:av_readdatavalid -> control_bridge_m0_translator:uav_readdatavalid
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_waitrequest;                   // monitor_csr_s_translator:uav_waitrequest -> monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_burstcount;                    // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_burstcount -> monitor_csr_s_translator:uav_burstcount
	wire  [31:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_writedata;                     // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_writedata -> monitor_csr_s_translator:uav_writedata
	wire   [7:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_address;                       // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_address -> monitor_csr_s_translator:uav_address
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_write;                         // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_write -> monitor_csr_s_translator:uav_write
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_lock;                          // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_lock -> monitor_csr_s_translator:uav_lock
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_read;                          // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_read -> monitor_csr_s_translator:uav_read
	wire  [31:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdata;                      // monitor_csr_s_translator:uav_readdata -> monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                 // monitor_csr_s_translator:uav_readdatavalid -> monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_debugaccess;                   // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_debugaccess -> monitor_csr_s_translator:uav_debugaccess
	wire   [3:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_byteenable;                    // monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_byteenable -> monitor_csr_s_translator:uav_byteenable
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;            // monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_valid;                  // monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_valid -> monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;          // monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [78:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_data;                   // monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_data -> monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_ready;                  // monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;         // monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;               // monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;       // monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [78:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                // monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;               // monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_ready -> monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;             // monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;              // monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;             // monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                             // cmd_xbar_mux:src_endofpacket -> monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                   // cmd_xbar_mux:src_valid -> monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                           // cmd_xbar_mux:src_startofpacket -> monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [77:0] cmd_xbar_mux_src_data;                                                                    // cmd_xbar_mux:src_data -> monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_data
	wire   [1:0] cmd_xbar_mux_src_channel;                                                                 // cmd_xbar_mux:src_channel -> monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                   // monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // pixel_monitor_csr_s_translator:uav_waitrequest -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_burstcount;              // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_burstcount -> pixel_monitor_csr_s_translator:uav_burstcount
	wire  [31:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_writedata;               // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_writedata -> pixel_monitor_csr_s_translator:uav_writedata
	wire   [7:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_address;                 // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_address -> pixel_monitor_csr_s_translator:uav_address
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_write;                   // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_write -> pixel_monitor_csr_s_translator:uav_write
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_lock;                    // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_lock -> pixel_monitor_csr_s_translator:uav_lock
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_read;                    // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_read -> pixel_monitor_csr_s_translator:uav_read
	wire  [31:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdata;                // pixel_monitor_csr_s_translator:uav_readdata -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // pixel_monitor_csr_s_translator:uav_readdatavalid -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pixel_monitor_csr_s_translator:uav_debugaccess
	wire   [3:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_byteenable;              // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:m0_byteenable -> pixel_monitor_csr_s_translator:uav_byteenable
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_valid;            // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_valid -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [78:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_data;             // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_data -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_ready;            // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [78:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                         // cmd_xbar_mux_001:src_endofpacket -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                               // cmd_xbar_mux_001:src_valid -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                       // cmd_xbar_mux_001:src_startofpacket -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [77:0] cmd_xbar_mux_001_src_data;                                                                // cmd_xbar_mux_001:src_data -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_data
	wire   [1:0] cmd_xbar_mux_001_src_channel;                                                             // cmd_xbar_mux_001:src_channel -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                               // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         control_bridge_m0_translator_avalon_universal_master_0_agent_cp_endofpacket;              // control_bridge_m0_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         control_bridge_m0_translator_avalon_universal_master_0_agent_cp_valid;                    // control_bridge_m0_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         control_bridge_m0_translator_avalon_universal_master_0_agent_cp_startofpacket;            // control_bridge_m0_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [77:0] control_bridge_m0_translator_avalon_universal_master_0_agent_cp_data;                     // control_bridge_m0_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         control_bridge_m0_translator_avalon_universal_master_0_agent_cp_ready;                    // addr_router:sink_ready -> control_bridge_m0_translator_avalon_universal_master_0_agent:cp_ready
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_endofpacket;                   // monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_valid;                         // monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_startofpacket;                 // monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [77:0] monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_data;                          // monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_ready;                         // id_router:sink_ready -> monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                      // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                              // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [77:0] id_router_src_data;                                                                       // id_router:src_data -> rsp_xbar_demux:sink_data
	wire   [1:0] id_router_src_channel;                                                                    // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                      // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_valid;                   // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [77:0] pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_data;                    // pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_001:sink_ready -> pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                            // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                  // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                          // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [77:0] id_router_001_src_data;                                                                   // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire   [1:0] id_router_001_src_channel;                                                                // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                  // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         addr_router_src_endofpacket;                                                              // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire         addr_router_src_valid;                                                                    // addr_router:src_valid -> limiter:cmd_sink_valid
	wire         addr_router_src_startofpacket;                                                            // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [77:0] addr_router_src_data;                                                                     // addr_router:src_data -> limiter:cmd_sink_data
	wire   [1:0] addr_router_src_channel;                                                                  // addr_router:src_channel -> limiter:cmd_sink_channel
	wire         addr_router_src_ready;                                                                    // limiter:cmd_sink_ready -> addr_router:src_ready
	wire         limiter_cmd_src_endofpacket;                                                              // limiter:cmd_src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         limiter_cmd_src_startofpacket;                                                            // limiter:cmd_src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [77:0] limiter_cmd_src_data;                                                                     // limiter:cmd_src_data -> cmd_xbar_demux:sink_data
	wire   [1:0] limiter_cmd_src_channel;                                                                  // limiter:cmd_src_channel -> cmd_xbar_demux:sink_channel
	wire         limiter_cmd_src_ready;                                                                    // cmd_xbar_demux:sink_ready -> limiter:cmd_src_ready
	wire         rsp_xbar_mux_src_endofpacket;                                                             // rsp_xbar_mux:src_endofpacket -> limiter:rsp_sink_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                   // rsp_xbar_mux:src_valid -> limiter:rsp_sink_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                           // rsp_xbar_mux:src_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [77:0] rsp_xbar_mux_src_data;                                                                    // rsp_xbar_mux:src_data -> limiter:rsp_sink_data
	wire   [1:0] rsp_xbar_mux_src_channel;                                                                 // rsp_xbar_mux:src_channel -> limiter:rsp_sink_channel
	wire         rsp_xbar_mux_src_ready;                                                                   // limiter:rsp_sink_ready -> rsp_xbar_mux:src_ready
	wire         limiter_rsp_src_endofpacket;                                                              // limiter:rsp_src_endofpacket -> control_bridge_m0_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         limiter_rsp_src_valid;                                                                    // limiter:rsp_src_valid -> control_bridge_m0_translator_avalon_universal_master_0_agent:rp_valid
	wire         limiter_rsp_src_startofpacket;                                                            // limiter:rsp_src_startofpacket -> control_bridge_m0_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [77:0] limiter_rsp_src_data;                                                                     // limiter:rsp_src_data -> control_bridge_m0_translator_avalon_universal_master_0_agent:rp_data
	wire   [1:0] limiter_rsp_src_channel;                                                                  // limiter:rsp_src_channel -> control_bridge_m0_translator_avalon_universal_master_0_agent:rp_channel
	wire         limiter_rsp_src_ready;                                                                    // control_bridge_m0_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                          // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                        // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [77:0] cmd_xbar_demux_src0_data;                                                                 // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire   [1:0] cmd_xbar_demux_src0_channel;                                                              // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                          // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                        // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [77:0] cmd_xbar_demux_src1_data;                                                                 // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire   [1:0] cmd_xbar_demux_src1_channel;                                                              // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                          // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                        // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [77:0] rsp_xbar_demux_src0_data;                                                                 // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire   [1:0] rsp_xbar_demux_src0_channel;                                                              // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                      // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                            // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                    // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [77:0] rsp_xbar_demux_001_src0_data;                                                             // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire   [1:0] rsp_xbar_demux_001_src0_channel;                                                          // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                            // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire   [1:0] limiter_cmd_valid_data;                                                                   // limiter:cmd_src_valid -> cmd_xbar_demux:sink_valid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (8),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (8),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) control_bridge_m0_translator (
		.clk                      (clock_bridge_out_clk_clk),                                             //                       clk.clk
		.reset                    (control_bridge_reset_reset_bridge_in_reset_reset),                     //                     reset.reset
		.uav_address              (control_bridge_m0_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (control_bridge_m0_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (control_bridge_m0_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (control_bridge_m0_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (control_bridge_m0_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (control_bridge_m0_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (control_bridge_m0_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (control_bridge_m0_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (control_bridge_m0_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (control_bridge_m0_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (control_bridge_m0_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (control_bridge_m0_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (control_bridge_m0_waitrequest),                                        //                          .waitrequest
		.av_burstcount            (control_bridge_m0_burstcount),                                         //                          .burstcount
		.av_byteenable            (control_bridge_m0_byteenable),                                         //                          .byteenable
		.av_read                  (control_bridge_m0_read),                                               //                          .read
		.av_readdata              (control_bridge_m0_readdata),                                           //                          .readdata
		.av_readdatavalid         (control_bridge_m0_readdatavalid),                                      //                          .readdatavalid
		.av_write                 (control_bridge_m0_write),                                              //                          .write
		.av_writedata             (control_bridge_m0_writedata),                                          //                          .writedata
		.av_debugaccess           (control_bridge_m0_debugaccess),                                        //                          .debugaccess
		.av_beginbursttransfer    (1'b0),                                                                 //               (terminated)
		.av_begintransfer         (1'b0),                                                                 //               (terminated)
		.av_chipselect            (1'b0),                                                                 //               (terminated)
		.av_lock                  (1'b0),                                                                 //               (terminated)
		.uav_clken                (),                                                                     //               (terminated)
		.av_clken                 (1'b1),                                                                 //               (terminated)
		.uav_response             (2'b00),                                                                //               (terminated)
		.av_response              (),                                                                     //               (terminated)
		.uav_writeresponserequest (),                                                                     //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                 //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                 //               (terminated)
		.av_writeresponsevalid    ()                                                                      //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (4),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (8),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (2),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) monitor_csr_s_translator (
		.clk                      (clock_bridge_out_clk_clk),                                                 //                      clk.clk
		.reset                    (control_bridge_reset_reset_bridge_in_reset_reset),                         //                    reset.reset
		.uav_address              (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (monitor_csr_s_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (monitor_csr_s_write),                                                      //                         .write
		.av_read                  (monitor_csr_s_read),                                                       //                         .read
		.av_readdata              (monitor_csr_s_readdata),                                                   //                         .readdata
		.av_writedata             (monitor_csr_s_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_chipselect            (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (4),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (8),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (2),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pixel_monitor_csr_s_translator (
		.clk                      (clock_bridge_out_clk_clk),                                                       //                      clk.clk
		.reset                    (control_bridge_reset_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pixel_monitor_csr_s_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (pixel_monitor_csr_s_write),                                                      //                         .write
		.av_read                  (pixel_monitor_csr_s_read),                                                       //                         .read
		.av_readdata              (pixel_monitor_csr_s_readdata),                                                   //                         .readdata
		.av_writedata             (pixel_monitor_csr_s_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_chipselect            (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (68),
		.PKT_PROTECTION_L          (66),
		.PKT_BEGIN_BURST           (61),
		.PKT_BURSTWRAP_H           (53),
		.PKT_BURSTWRAP_L           (53),
		.PKT_BURST_SIZE_H          (56),
		.PKT_BURST_SIZE_L          (54),
		.PKT_BURST_TYPE_H          (58),
		.PKT_BURST_TYPE_L          (57),
		.PKT_BYTE_CNT_H            (52),
		.PKT_BYTE_CNT_L            (50),
		.PKT_ADDR_H                (43),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (44),
		.PKT_TRANS_POSTED          (45),
		.PKT_TRANS_WRITE           (46),
		.PKT_TRANS_READ            (47),
		.PKT_TRANS_LOCK            (48),
		.PKT_TRANS_EXCLUSIVE       (49),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (63),
		.PKT_SRC_ID_L              (63),
		.PKT_DEST_ID_H             (64),
		.PKT_DEST_ID_L             (64),
		.PKT_THREAD_ID_H           (65),
		.PKT_THREAD_ID_L           (65),
		.PKT_CACHE_H               (72),
		.PKT_CACHE_L               (69),
		.PKT_DATA_SIDEBAND_H       (60),
		.PKT_DATA_SIDEBAND_L       (60),
		.PKT_QOS_H                 (62),
		.PKT_QOS_L                 (62),
		.PKT_ADDR_SIDEBAND_H       (59),
		.PKT_ADDR_SIDEBAND_L       (59),
		.PKT_RESPONSE_STATUS_H     (74),
		.PKT_RESPONSE_STATUS_L     (73),
		.PKT_ORI_BURST_SIZE_L      (75),
		.PKT_ORI_BURST_SIZE_H      (77),
		.ST_DATA_W                 (78),
		.ST_CHANNEL_W              (2),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) control_bridge_m0_translator_avalon_universal_master_0_agent (
		.clk                     (clock_bridge_out_clk_clk),                                                      //       clk.clk
		.reset                   (control_bridge_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address              (control_bridge_m0_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (control_bridge_m0_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (control_bridge_m0_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (control_bridge_m0_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (control_bridge_m0_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (control_bridge_m0_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (control_bridge_m0_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (control_bridge_m0_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (control_bridge_m0_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (control_bridge_m0_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (control_bridge_m0_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                         //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                          //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                       //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                 //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                   //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                         //          .ready
		.av_response             (),                                                                              // (terminated)
		.av_writeresponserequest (1'b0),                                                                          // (terminated)
		.av_writeresponsevalid   ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (61),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (43),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (44),
		.PKT_TRANS_POSTED          (45),
		.PKT_TRANS_WRITE           (46),
		.PKT_TRANS_READ            (47),
		.PKT_TRANS_LOCK            (48),
		.PKT_SRC_ID_H              (63),
		.PKT_SRC_ID_L              (63),
		.PKT_DEST_ID_H             (64),
		.PKT_DEST_ID_L             (64),
		.PKT_BURSTWRAP_H           (53),
		.PKT_BURSTWRAP_L           (53),
		.PKT_BYTE_CNT_H            (52),
		.PKT_BYTE_CNT_L            (50),
		.PKT_PROTECTION_H          (68),
		.PKT_PROTECTION_L          (66),
		.PKT_RESPONSE_STATUS_H     (74),
		.PKT_RESPONSE_STATUS_L     (73),
		.PKT_BURST_SIZE_H          (56),
		.PKT_BURST_SIZE_L          (54),
		.PKT_ORI_BURST_SIZE_L      (75),
		.PKT_ORI_BURST_SIZE_H      (77),
		.ST_CHANNEL_W              (2),
		.ST_DATA_W                 (78),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) monitor_csr_s_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_bridge_out_clk_clk),                                                           //             clk.clk
		.reset                   (control_bridge_reset_reset_bridge_in_reset_reset),                                   //       clk_reset.reset
		.m0_address              (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                           //                .channel
		.rf_sink_ready           (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (79),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_bridge_out_clk_clk),                                                           //       clk.clk
		.reset             (control_bridge_reset_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.in_data           (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (61),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (43),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (44),
		.PKT_TRANS_POSTED          (45),
		.PKT_TRANS_WRITE           (46),
		.PKT_TRANS_READ            (47),
		.PKT_TRANS_LOCK            (48),
		.PKT_SRC_ID_H              (63),
		.PKT_SRC_ID_L              (63),
		.PKT_DEST_ID_H             (64),
		.PKT_DEST_ID_L             (64),
		.PKT_BURSTWRAP_H           (53),
		.PKT_BURSTWRAP_L           (53),
		.PKT_BYTE_CNT_H            (52),
		.PKT_BYTE_CNT_L            (50),
		.PKT_PROTECTION_H          (68),
		.PKT_PROTECTION_L          (66),
		.PKT_RESPONSE_STATUS_H     (74),
		.PKT_RESPONSE_STATUS_L     (73),
		.PKT_BURST_SIZE_H          (56),
		.PKT_BURST_SIZE_L          (54),
		.PKT_ORI_BURST_SIZE_L      (75),
		.PKT_ORI_BURST_SIZE_H      (77),
		.ST_CHANNEL_W              (2),
		.ST_DATA_W                 (78),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_bridge_out_clk_clk),                                                                 //             clk.clk
		.reset                   (control_bridge_reset_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                             //                .channel
		.rf_sink_ready           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (79),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_bridge_out_clk_clk),                                                                 //       clk.clk
		.reset             (control_bridge_reset_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (control_bridge_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clock_bridge_out_clk_clk),                                                      //       clk.clk
		.reset              (control_bridge_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                         //       src.ready
		.src_valid          (addr_router_src_valid),                                                         //          .valid
		.src_data           (addr_router_src_data),                                                          //          .data
		.src_channel        (addr_router_src_channel),                                                       //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                 //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                    //          .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_id_router id_router (
		.sink_ready         (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_bridge_out_clk_clk),                                                 //       clk.clk
		.reset              (control_bridge_reset_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                      //       src.ready
		.src_valid          (id_router_src_valid),                                                      //          .valid
		.src_data           (id_router_src_data),                                                       //          .data
		.src_channel        (id_router_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                 //          .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_id_router id_router_001 (
		.sink_ready         (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pixel_monitor_csr_s_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_bridge_out_clk_clk),                                                       //       clk.clk
		.reset              (control_bridge_reset_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                        //       src.ready
		.src_valid          (id_router_001_src_valid),                                                        //          .valid
		.src_data           (id_router_001_src_data),                                                         //          .data
		.src_channel        (id_router_001_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                   //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (64),
		.PKT_DEST_ID_L             (64),
		.PKT_SRC_ID_H              (63),
		.PKT_SRC_ID_L              (63),
		.PKT_TRANS_POSTED          (45),
		.PKT_TRANS_WRITE           (46),
		.MAX_OUTSTANDING_RESPONSES (2),
		.PIPELINED                 (0),
		.ST_DATA_W                 (78),
		.ST_CHANNEL_W              (2),
		.VALID_WIDTH               (2),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (52),
		.PKT_BYTE_CNT_L            (50),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (clock_bridge_out_clk_clk),                         //       clk.clk
		.reset                  (control_bridge_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                            //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                            //          .valid
		.cmd_sink_data          (addr_router_src_data),                             //          .data
		.cmd_sink_channel       (addr_router_src_channel),                          //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),                    //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),                      //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                            //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                             //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                          //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                    //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                      //          .endofpacket
		.rsp_sink_ready         (rsp_xbar_mux_src_ready),                           //  rsp_sink.ready
		.rsp_sink_valid         (rsp_xbar_mux_src_valid),                           //          .valid
		.rsp_sink_channel       (rsp_xbar_mux_src_channel),                         //          .channel
		.rsp_sink_data          (rsp_xbar_mux_src_data),                            //          .data
		.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),                   //          .startofpacket
		.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),                     //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                            //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                            //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                             //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                          //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                    //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),                      //          .endofpacket
		.cmd_src_valid          (limiter_cmd_valid_data)                            // cmd_valid.data
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clock_bridge_out_clk_clk),                         //        clk.clk
		.reset              (control_bridge_reset_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready         (limiter_cmd_src_ready),                            //       sink.ready
		.sink_channel       (limiter_cmd_src_channel),                          //           .channel
		.sink_data          (limiter_cmd_src_data),                             //           .data
		.sink_startofpacket (limiter_cmd_src_startofpacket),                    //           .startofpacket
		.sink_endofpacket   (limiter_cmd_src_endofpacket),                      //           .endofpacket
		.sink_valid         (limiter_cmd_valid_data),                           // sink_valid.data
		.src0_ready         (cmd_xbar_demux_src0_ready),                        //       src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                        //           .valid
		.src0_data          (cmd_xbar_demux_src0_data),                         //           .data
		.src0_channel       (cmd_xbar_demux_src0_channel),                      //           .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),                //           .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                  //           .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                        //       src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                        //           .valid
		.src1_data          (cmd_xbar_demux_src1_data),                         //           .data
		.src1_channel       (cmd_xbar_demux_src1_channel),                      //           .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),                //           .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)                   //           .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clock_bridge_out_clk_clk),                         //       clk.clk
		.reset               (control_bridge_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                        //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                        //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                      //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                         //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),                //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                   //          .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clock_bridge_out_clk_clk),                         //       clk.clk
		.reset               (control_bridge_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                       //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                       //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                        //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),                     //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),               //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                 //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                        //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                        //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                      //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                         //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),                //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)                   //          .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux (
		.clk                (clock_bridge_out_clk_clk),                         //       clk.clk
		.reset              (control_bridge_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                              //      sink.ready
		.sink_channel       (id_router_src_channel),                            //          .channel
		.sink_data          (id_router_src_data),                               //          .data
		.sink_startofpacket (id_router_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                   //          .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (clock_bridge_out_clk_clk),                         //       clk.clk
		.reset              (control_bridge_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                          //      sink.ready
		.sink_channel       (id_router_001_src_channel),                        //          .channel
		.sink_data          (id_router_001_src_data),                           //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),                  //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),                    //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                          //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),                    //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),                    //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),                     //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),                  //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),            //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)               //          .endofpacket
	);

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clock_bridge_out_clk_clk),                         //       clk.clk
		.reset               (control_bridge_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                           //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                           //          .valid
		.src_data            (rsp_xbar_mux_src_data),                            //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                         //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                        //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                        //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),                      //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                         //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),                //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),                  //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),                    //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),                    //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),                  //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),                     //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),            //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)               //          .endofpacket
	);

endmodule
