// DE1_SoC_QSYS_trace_system_0.v

// This file was auto-generated from altera_trace_system_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2017.03.14.18:12:05

`timescale 1 ps / 1 ps
module DE1_SoC_QSYS_trace_system_0 (
		input  wire        clk_clk,                 //       clk.clk
		output wire        reset_reset,             //     reset.reset
		output wire        capture_0_ready,         // capture_0.ready
		input  wire        capture_0_valid,         //          .valid
		input  wire [31:0] capture_0_data,          //          .data
		input  wire        capture_0_startofpacket, //          .startofpacket
		input  wire        capture_0_endofpacket,   //          .endofpacket
		input  wire [1:0]  capture_0_empty,         //          .empty
		output wire        control_0_write,         // control_0.write
		output wire        control_0_read,          //          .read
		output wire [5:0]  control_0_address,       //          .address
		output wire [31:0] control_0_writedata,     //          .writedata
		input  wire [31:0] control_0_readdata,      //          .readdata
		input  wire        control_0_waitrequest,   //          .waitrequest
		output wire        capture_1_ready,         // capture_1.ready
		input  wire        capture_1_valid,         //          .valid
		input  wire [31:0] capture_1_data,          //          .data
		input  wire        capture_1_startofpacket, //          .startofpacket
		input  wire        capture_1_endofpacket,   //          .endofpacket
		input  wire [1:0]  capture_1_empty,         //          .empty
		output wire        control_1_write,         // control_1.write
		output wire        control_1_read,          //          .read
		output wire [5:0]  control_1_address,       //          .address
		output wire [31:0] control_1_writedata,     //          .writedata
		input  wire [31:0] control_1_readdata,      //          .readdata
		input  wire        control_1_waitrequest    //          .waitrequest
	);

	wire        link_h2t_endofpacket;       // link:h2t_endofpacket -> fabric:h2t_endofpacket
	wire        link_h2t_valid;             // link:h2t_valid -> fabric:h2t_valid
	wire        link_h2t_startofpacket;     // link:h2t_startofpacket -> fabric:h2t_startofpacket
	wire  [7:0] link_h2t_data;              // link:h2t_data -> fabric:h2t_data
	wire        link_h2t_ready;             // fabric:h2t_ready -> link:h2t_ready
	wire  [7:0] link_h2t_channel;           // link:h2t_channel -> fabric:h2t_channel
	wire        fabric_t2h_endofpacket;     // fabric:t2h_endofpacket -> link:t2h_endofpacket
	wire        fabric_t2h_valid;           // fabric:t2h_valid -> link:t2h_valid
	wire        fabric_t2h_startofpacket;   // fabric:t2h_startofpacket -> link:t2h_startofpacket
	wire  [7:0] fabric_t2h_data;            // fabric:t2h_data -> link:t2h_data
	wire  [7:0] fabric_t2h_channel;         // fabric:t2h_channel -> link:t2h_channel
	wire        fabric_t2h_ready;           // link:t2h_ready -> fabric:t2h_ready
	wire        link_mgmt_valid;            // link:mgmt_valid -> fabric:mgmt_valid
	wire        link_mgmt_data;             // link:mgmt_data -> fabric:mgmt_data
	wire  [7:0] link_mgmt_channel;          // link:mgmt_channel -> fabric:mgmt_channel
	wire        fabric_h2t_0_endofpacket;   // fabric:h2t_0_endofpacket -> tracesys:h2t_endofpacket
	wire        fabric_h2t_0_valid;         // fabric:h2t_0_valid -> tracesys:h2t_valid
	wire        fabric_h2t_0_startofpacket; // fabric:h2t_0_startofpacket -> tracesys:h2t_startofpacket
	wire  [7:0] fabric_h2t_0_data;          // fabric:h2t_0_data -> tracesys:h2t_data
	wire        fabric_h2t_0_channel;       // fabric:h2t_0_channel -> tracesys:h2t_channel
	wire        fabric_h2t_0_ready;         // tracesys:h2t_ready -> fabric:h2t_0_ready
	wire        tracesys_t2h_endofpacket;   // tracesys:t2h_endofpacket -> fabric:t2h_0_endofpacket
	wire        tracesys_t2h_valid;         // tracesys:t2h_valid -> fabric:t2h_0_valid
	wire        tracesys_t2h_startofpacket; // tracesys:t2h_startofpacket -> fabric:t2h_0_startofpacket
	wire  [7:0] tracesys_t2h_data;          // tracesys:t2h_data -> fabric:t2h_0_data
	wire  [0:0] tracesys_t2h_channel;       // tracesys:t2h_channel -> fabric:t2h_0_channel
	wire        tracesys_t2h_ready;         // fabric:t2h_0_ready -> tracesys:t2h_ready

	DE1_SoC_QSYS_trace_system_0_tracesys #(
		.WAKE_UP_MODE            ("IDLE"),
		.PERIODIC_TS_REQ_STARTUP (0)
	) tracesys (
		.clk_clk                 (clk_clk),                    //           clk.clk
		.reset_reset             (reset_reset),                //         reset.reset
		.debug_reset_reset       (),                           //   debug_reset.reset
		.h2t_ready               (fabric_h2t_0_ready),         //           h2t.ready
		.h2t_valid               (fabric_h2t_0_valid),         //              .valid
		.h2t_startofpacket       (fabric_h2t_0_startofpacket), //              .startofpacket
		.h2t_endofpacket         (fabric_h2t_0_endofpacket),   //              .endofpacket
		.h2t_data                (fabric_h2t_0_data),          //              .data
		.h2t_channel             (fabric_h2t_0_channel),       //              .channel
		.t2h_ready               (tracesys_t2h_ready),         //           t2h.ready
		.t2h_valid               (tracesys_t2h_valid),         //              .valid
		.t2h_startofpacket       (tracesys_t2h_startofpacket), //              .startofpacket
		.t2h_endofpacket         (tracesys_t2h_endofpacket),   //              .endofpacket
		.t2h_data                (tracesys_t2h_data),          //              .data
		.t2h_channel             (tracesys_t2h_channel),       //              .channel
		.capture_0_ready         (capture_0_ready),            //     capture_0.ready
		.capture_0_valid         (capture_0_valid),            //              .valid
		.capture_0_data          (capture_0_data),             //              .data
		.capture_0_startofpacket (capture_0_startofpacket),    //              .startofpacket
		.capture_0_endofpacket   (capture_0_endofpacket),      //              .endofpacket
		.capture_0_empty         (capture_0_empty),            //              .empty
		.control_0_write         (control_0_write),            //     control_0.write
		.control_0_read          (control_0_read),             //              .read
		.control_0_address       (control_0_address),          //              .address
		.control_0_writedata     (control_0_writedata),        //              .writedata
		.control_0_readdata      (control_0_readdata),         //              .readdata
		.control_0_waitrequest   (control_0_waitrequest),      //              .waitrequest
		.debug_reset_0_reset     (),                           // debug_reset_0.reset
		.capture_1_ready         (capture_1_ready),            //     capture_1.ready
		.capture_1_valid         (capture_1_valid),            //              .valid
		.capture_1_data          (capture_1_data),             //              .data
		.capture_1_startofpacket (capture_1_startofpacket),    //              .startofpacket
		.capture_1_endofpacket   (capture_1_endofpacket),      //              .endofpacket
		.capture_1_empty         (capture_1_empty),            //              .empty
		.control_1_write         (control_1_write),            //     control_1.write
		.control_1_read          (control_1_read),             //              .read
		.control_1_address       (control_1_address),          //              .address
		.control_1_writedata     (control_1_writedata),        //              .writedata
		.control_1_readdata      (control_1_readdata),         //              .readdata
		.control_1_waitrequest   (control_1_waitrequest),      //              .waitrequest
		.debug_reset_1_reset     ()                            // debug_reset_1.reset
	);

	DE1_SoC_QSYS_trace_system_0_link link (
		.clk_clk           (clk_clk),                  //         clk.clk
		.debug_reset_reset (reset_reset),              // debug_reset.reset
		.h2t_channel       (link_h2t_channel),         //         h2t.channel
		.h2t_ready         (link_h2t_ready),           //            .ready
		.h2t_valid         (link_h2t_valid),           //            .valid
		.h2t_data          (link_h2t_data),            //            .data
		.h2t_startofpacket (link_h2t_startofpacket),   //            .startofpacket
		.h2t_endofpacket   (link_h2t_endofpacket),     //            .endofpacket
		.t2h_ready         (fabric_t2h_ready),         //         t2h.ready
		.t2h_valid         (fabric_t2h_valid),         //            .valid
		.t2h_data          (fabric_t2h_data),          //            .data
		.t2h_channel       (fabric_t2h_channel),       //            .channel
		.t2h_startofpacket (fabric_t2h_startofpacket), //            .startofpacket
		.t2h_endofpacket   (fabric_t2h_endofpacket),   //            .endofpacket
		.mgmt_valid        (link_mgmt_valid),          //        mgmt.valid
		.mgmt_channel      (link_mgmt_channel),        //            .channel
		.mgmt_data         (link_mgmt_data)            //            .data
	);

	DE1_SoC_QSYS_trace_system_0_fabric fabric (
		.clk_clk             (clk_clk),                    //     clk.clk
		.reset_reset         (reset_reset),                //   reset.reset
		.h2t_ready           (link_h2t_ready),             //     h2t.ready
		.h2t_valid           (link_h2t_valid),             //        .valid
		.h2t_data            (link_h2t_data),              //        .data
		.h2t_channel         (link_h2t_channel),           //        .channel
		.h2t_startofpacket   (link_h2t_startofpacket),     //        .startofpacket
		.h2t_endofpacket     (link_h2t_endofpacket),       //        .endofpacket
		.mgmt_valid          (link_mgmt_valid),            //    mgmt.valid
		.mgmt_data           (link_mgmt_data),             //        .data
		.mgmt_channel        (link_mgmt_channel),          //        .channel
		.t2h_ready           (fabric_t2h_ready),           //     t2h.ready
		.t2h_valid           (fabric_t2h_valid),           //        .valid
		.t2h_data            (fabric_t2h_data),            //        .data
		.t2h_startofpacket   (fabric_t2h_startofpacket),   //        .startofpacket
		.t2h_endofpacket     (fabric_t2h_endofpacket),     //        .endofpacket
		.t2h_channel         (fabric_t2h_channel),         //        .channel
		.reset_0_reset       (),                           // reset_0.reset
		.h2t_0_valid         (fabric_h2t_0_valid),         //   h2t_0.valid
		.h2t_0_ready         (fabric_h2t_0_ready),         //        .ready
		.h2t_0_data          (fabric_h2t_0_data),          //        .data
		.h2t_0_startofpacket (fabric_h2t_0_startofpacket), //        .startofpacket
		.h2t_0_endofpacket   (fabric_h2t_0_endofpacket),   //        .endofpacket
		.h2t_0_channel       (fabric_h2t_0_channel),       //        .channel
		.t2h_0_valid         (tracesys_t2h_valid),         //   t2h_0.valid
		.t2h_0_ready         (tracesys_t2h_ready),         //        .ready
		.t2h_0_data          (tracesys_t2h_data),          //        .data
		.t2h_0_startofpacket (tracesys_t2h_startofpacket), //        .startofpacket
		.t2h_0_endofpacket   (tracesys_t2h_endofpacket),   //        .endofpacket
		.t2h_0_channel       (tracesys_t2h_channel)        //        .channel
	);

endmodule
