// DE1_SoC_QSYS_alt_vip_avst_video_monitor_0.v

// This file was auto-generated from alt_vip_avst_video_monitor_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2017.03.14.18:12:05

`timescale 1 ps / 1 ps
module DE1_SoC_QSYS_alt_vip_avst_video_monitor_0 #(
		parameter THUMBNAIL_SUPPORT = 1
	) (
		input  wire        clock_clk,             //   clock.clk
		input  wire        reset_reset,           //   reset.reset
		input  wire        din_valid,             //     din.valid
		input  wire [23:0] din_data,              //        .data
		output wire        din_ready,             //        .ready
		input  wire        din_startofpacket,     //        .startofpacket
		input  wire        din_endofpacket,       //        .endofpacket
		output wire        dout_valid,            //    dout.valid
		output wire [23:0] dout_data,             //        .data
		input  wire        dout_ready,            //        .ready
		output wire        dout_startofpacket,    //        .startofpacket
		output wire        dout_endofpacket,      //        .endofpacket
		output wire        control_waitrequest,   // control.waitrequest
		output wire [31:0] control_readdata,      //        .readdata
		output wire        control_readdatavalid, //        .readdatavalid
		input  wire [0:0]  control_burstcount,    //        .burstcount
		input  wire [31:0] control_writedata,     //        .writedata
		input  wire [7:0]  control_address,       //        .address
		input  wire        control_write,         //        .write
		input  wire        control_read,          //        .read
		input  wire [3:0]  control_byteenable,    //        .byteenable
		input  wire        control_debugaccess,   //        .debugaccess
		input  wire        capture_ready,         // capture.ready
		output wire        capture_valid,         //        .valid
		output wire [31:0] capture_data,          //        .data
		output wire        capture_startofpacket, //        .startofpacket
		output wire        capture_endofpacket,   //        .endofpacket
		output wire [1:0]  capture_empty          //        .empty
	);

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (THUMBNAIL_SUPPORT != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					thumbnail_support_check ( .error(1'b1) );
		end
	endgenerate

	DE1_SoC_QSYS_alt_vip_avst_video_monitor_0_monitor #(
		.THUMBNAIL_SUPPORT (1)
	) monitor (
		.clock_clk             (clock_clk),             //   clock.clk
		.reset_reset           (reset_reset),           //   reset.reset
		.tap_valid             (din_valid),             //     tap.valid
		.tap_data              (din_data),              //        .data
		.tap_ready             (dout_ready),            //        .ready
		.tap_startofpacket     (din_startofpacket),     //        .startofpacket
		.tap_endofpacket       (din_endofpacket),       //        .endofpacket
		.control_waitrequest   (control_waitrequest),   // control.waitrequest
		.control_readdata      (control_readdata),      //        .readdata
		.control_readdatavalid (control_readdatavalid), //        .readdatavalid
		.control_burstcount    (control_burstcount),    //        .burstcount
		.control_writedata     (control_writedata),     //        .writedata
		.control_address       (control_address),       //        .address
		.control_write         (control_write),         //        .write
		.control_read          (control_read),          //        .read
		.control_byteenable    (control_byteenable),    //        .byteenable
		.control_debugaccess   (control_debugaccess),   //        .debugaccess
		.capture_ready         (capture_ready),         // capture.ready
		.capture_valid         (capture_valid),         //        .valid
		.capture_data          (capture_data),          //        .data
		.capture_startofpacket (capture_startofpacket), //        .startofpacket
		.capture_endofpacket   (capture_endofpacket),   //        .endofpacket
		.capture_empty         (capture_empty)          //        .empty
	);

	assign dout_endofpacket = din_endofpacket;

	assign dout_valid = din_valid;

	assign dout_startofpacket = din_startofpacket;

	assign dout_data = din_data;

	assign din_ready = dout_ready;

endmodule
