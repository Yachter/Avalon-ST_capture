// DE1_SoC_QSYS_trace_system_0_fabric.v

// This file was auto-generated from altera_debug_fabric_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2017.03.14.18:12:14

`timescale 1 ps / 1 ps
module DE1_SoC_QSYS_trace_system_0_fabric (
		input  wire       clk_clk,             //     clk.clk
		input  wire       reset_reset,         //   reset.reset
		output wire       h2t_ready,           //     h2t.ready
		input  wire       h2t_valid,           //        .valid
		input  wire [7:0] h2t_data,            //        .data
		input  wire [7:0] h2t_channel,         //        .channel
		input  wire       h2t_startofpacket,   //        .startofpacket
		input  wire       h2t_endofpacket,     //        .endofpacket
		input  wire       mgmt_valid,          //    mgmt.valid
		input  wire       mgmt_data,           //        .data
		input  wire [7:0] mgmt_channel,        //        .channel
		input  wire       t2h_ready,           //     t2h.ready
		output wire       t2h_valid,           //        .valid
		output wire [7:0] t2h_data,            //        .data
		output wire       t2h_startofpacket,   //        .startofpacket
		output wire       t2h_endofpacket,     //        .endofpacket
		output wire [7:0] t2h_channel,         //        .channel
		output wire       reset_0_reset,       // reset_0.reset
		output wire       h2t_0_valid,         //   h2t_0.valid
		input  wire       h2t_0_ready,         //        .ready
		output wire [7:0] h2t_0_data,          //        .data
		output wire       h2t_0_startofpacket, //        .startofpacket
		output wire       h2t_0_endofpacket,   //        .endofpacket
		output wire       h2t_0_channel,       //        .channel
		input  wire       t2h_0_valid,         //   t2h_0.valid
		output wire       t2h_0_ready,         //        .ready
		input  wire [7:0] t2h_0_data,          //        .data
		input  wire       t2h_0_startofpacket, //        .startofpacket
		input  wire       t2h_0_endofpacket,   //        .endofpacket
		input  wire       t2h_0_channel        //        .channel
	);

	wire        mgmt_demux_out0_valid;              // mgmt_demux:out0_valid -> mgmt_demux_port_adap:in_valid
	wire        mgmt_demux_out0_data;               // mgmt_demux:out0_data -> mgmt_demux_port_adap:in_data
	wire        mgmt_demux_out0_ready;              // mgmt_demux_port_adap:in_ready -> mgmt_demux:out0_ready
	wire        mgmt_demux_out0_channel;            // mgmt_demux:out0_channel -> mgmt_demux_port_adap:in_channel
	wire        h2t_channel_adap_out_endofpacket;   // h2t_channel_adap:out_endofpacket -> demux:in_endofpacket
	wire        h2t_channel_adap_out_valid;         // h2t_channel_adap:out_valid -> demux:in_valid
	wire        h2t_channel_adap_out_startofpacket; // h2t_channel_adap:out_startofpacket -> demux:in_startofpacket
	wire  [7:0] h2t_channel_adap_out_data;          // h2t_channel_adap:out_data -> demux:in_data
	wire  [1:0] h2t_channel_adap_out_channel;       // h2t_channel_adap:out_channel -> demux:in_channel
	wire        h2t_channel_adap_out_ready;         // demux:in_ready -> h2t_channel_adap:out_ready
	wire        mux_out_endofpacket;                // mux:out_endofpacket -> t2h_channel_adap:in_endofpacket
	wire        mux_out_valid;                      // mux:out_valid -> t2h_channel_adap:in_valid
	wire        mux_out_startofpacket;              // mux:out_startofpacket -> t2h_channel_adap:in_startofpacket
	wire  [7:0] mux_out_data;                       // mux:out_data -> t2h_channel_adap:in_data
	wire        mux_out_ready;                      // t2h_channel_adap:in_ready -> mux:out_ready
	wire  [1:0] mux_out_channel;                    // mux:out_channel -> t2h_channel_adap:in_channel
	wire        mgmt_channel_adap_out_valid;        // mgmt_channel_adap:out_valid -> mgmt_demux:in_valid
	wire        mgmt_channel_adap_out_data;         // mgmt_channel_adap:out_data -> mgmt_demux:in_data
	wire  [1:0] mgmt_channel_adap_out_channel;      // mgmt_channel_adap:out_channel -> mgmt_demux:in_channel
	wire        mgmt_channel_adap_out_ready;        // mgmt_demux:in_ready -> mgmt_channel_adap:out_ready
	wire        mgmt_time_adap_out_valid;           // mgmt_time_adap:out_valid -> mgmt_channel_adap:in_valid
	wire        mgmt_time_adap_out_data;            // mgmt_time_adap:out_data -> mgmt_channel_adap:in_data
	wire        mgmt_time_adap_out_ready;           // mgmt_channel_adap:in_ready -> mgmt_time_adap:out_ready
	wire  [7:0] mgmt_time_adap_out_channel;         // mgmt_time_adap:out_channel -> mgmt_channel_adap:in_channel
	wire        demux_out0_endofpacket;             // demux:out0_endofpacket -> mux:in0_endofpacket
	wire        demux_out0_valid;                   // demux:out0_valid -> mux:in0_valid
	wire        demux_out0_startofpacket;           // demux:out0_startofpacket -> mux:in0_startofpacket
	wire  [7:0] demux_out0_data;                    // demux:out0_data -> mux:in0_data
	wire        demux_out0_ready;                   // mux:in0_ready -> demux:out0_ready
	wire        demux_out0_channel;                 // demux:out0_channel -> mux:in0_channel
	wire        mgmt_demux_out1_valid;              // mgmt_demux:out1_valid -> rst_chan_adap0:in_valid
	wire        mgmt_demux_out1_data;               // mgmt_demux:out1_data -> rst_chan_adap0:in_data
	wire        mgmt_demux_out1_ready;              // rst_chan_adap0:in_ready -> mgmt_demux:out1_ready
	wire        mgmt_demux_out1_channel;            // mgmt_demux:out1_channel -> rst_chan_adap0:in_channel
	wire        rst_chan_adap0_out_valid;           // rst_chan_adap0:out_valid -> mgmt_reset_0:mgmt_valid
	wire        rst_chan_adap0_out_data;            // rst_chan_adap0:out_data -> mgmt_reset_0:mgmt_data
	wire        rst_chan_adap0_out_ready;           // mgmt_reset_0:mgmt_ready -> rst_chan_adap0:out_ready

	DE1_SoC_QSYS_trace_system_0_fabric_demux demux (
		.clk                (clk_clk),                            //   clk.clk
		.reset_n            (~reset_reset),                       // reset.reset_n
		.in_channel         (h2t_channel_adap_out_channel),       //    in.channel
		.in_valid           (h2t_channel_adap_out_valid),         //      .valid
		.in_ready           (h2t_channel_adap_out_ready),         //      .ready
		.in_data            (h2t_channel_adap_out_data),          //      .data
		.in_startofpacket   (h2t_channel_adap_out_startofpacket), //      .startofpacket
		.in_endofpacket     (h2t_channel_adap_out_endofpacket),   //      .endofpacket
		.out0_channel       (demux_out0_channel),                 //  out0.channel
		.out0_valid         (demux_out0_valid),                   //      .valid
		.out0_ready         (demux_out0_ready),                   //      .ready
		.out0_data          (demux_out0_data),                    //      .data
		.out0_startofpacket (demux_out0_startofpacket),           //      .startofpacket
		.out0_endofpacket   (demux_out0_endofpacket),             //      .endofpacket
		.out1_channel       (h2t_0_channel),                      //  out1.channel
		.out1_valid         (h2t_0_valid),                        //      .valid
		.out1_ready         (h2t_0_ready),                        //      .ready
		.out1_data          (h2t_0_data),                         //      .data
		.out1_startofpacket (h2t_0_startofpacket),                //      .startofpacket
		.out1_endofpacket   (h2t_0_endofpacket)                   //      .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_fabric_mux mux (
		.clk               (clk_clk),                  //   clk.clk
		.reset_n           (~reset_reset),             // reset.reset_n
		.in0_channel       (demux_out0_channel),       //   in0.channel
		.in0_valid         (demux_out0_valid),         //      .valid
		.in0_ready         (demux_out0_ready),         //      .ready
		.in0_data          (demux_out0_data),          //      .data
		.in0_startofpacket (demux_out0_startofpacket), //      .startofpacket
		.in0_endofpacket   (demux_out0_endofpacket),   //      .endofpacket
		.in1_channel       (t2h_0_channel),            //   in1.channel
		.in1_valid         (t2h_0_valid),              //      .valid
		.in1_ready         (t2h_0_ready),              //      .ready
		.in1_data          (t2h_0_data),               //      .data
		.in1_startofpacket (t2h_0_startofpacket),      //      .startofpacket
		.in1_endofpacket   (t2h_0_endofpacket),        //      .endofpacket
		.out_channel       (mux_out_channel),          //   out.channel
		.out_valid         (mux_out_valid),            //      .valid
		.out_ready         (mux_out_ready),            //      .ready
		.out_data          (mux_out_data),             //      .data
		.out_startofpacket (mux_out_startofpacket),    //      .startofpacket
		.out_endofpacket   (mux_out_endofpacket)       //      .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_fabric_mgmt_demux mgmt_demux (
		.clk          (clk_clk),                       //   clk.clk
		.reset_n      (~reset_reset),                  // reset.reset_n
		.in_channel   (mgmt_channel_adap_out_channel), //    in.channel
		.in_valid     (mgmt_channel_adap_out_valid),   //      .valid
		.in_ready     (mgmt_channel_adap_out_ready),   //      .ready
		.in_data      (mgmt_channel_adap_out_data),    //      .data
		.out0_channel (mgmt_demux_out0_channel),       //  out0.channel
		.out0_valid   (mgmt_demux_out0_valid),         //      .valid
		.out0_ready   (mgmt_demux_out0_ready),         //      .ready
		.out0_data    (mgmt_demux_out0_data),          //      .data
		.out1_channel (mgmt_demux_out1_channel),       //  out1.channel
		.out1_valid   (mgmt_demux_out1_valid),         //      .valid
		.out1_ready   (mgmt_demux_out1_ready),         //      .ready
		.out1_data    (mgmt_demux_out1_data)           //      .data
	);

	DE1_SoC_QSYS_trace_system_0_fabric_mgmt_demux_port_adap mgmt_demux_port_adap (
		.clk        (clk_clk),                 //   clk.clk
		.reset_n    (~reset_reset),            // reset.reset_n
		.in_ready   (mgmt_demux_out0_ready),   //    in.ready
		.in_valid   (mgmt_demux_out0_valid),   //      .valid
		.in_data    (mgmt_demux_out0_data),    //      .data
		.in_channel (mgmt_demux_out0_channel), //      .channel
		.out_ready  (1'b1),                    //   out.ready
		.out_valid  (),                        //      .valid
		.out_data   ()                         //      .data
	);

	DE1_SoC_QSYS_trace_system_0_fabric_h2t_channel_adap h2t_channel_adap (
		.clk               (clk_clk),                            //   clk.clk
		.reset_n           (~reset_reset),                       // reset.reset_n
		.in_ready          (h2t_ready),                          //    in.ready
		.in_valid          (h2t_valid),                          //      .valid
		.in_data           (h2t_data),                           //      .data
		.in_channel        (h2t_channel),                        //      .channel
		.in_startofpacket  (h2t_startofpacket),                  //      .startofpacket
		.in_endofpacket    (h2t_endofpacket),                    //      .endofpacket
		.out_ready         (h2t_channel_adap_out_ready),         //   out.ready
		.out_valid         (h2t_channel_adap_out_valid),         //      .valid
		.out_data          (h2t_channel_adap_out_data),          //      .data
		.out_channel       (h2t_channel_adap_out_channel),       //      .channel
		.out_startofpacket (h2t_channel_adap_out_startofpacket), //      .startofpacket
		.out_endofpacket   (h2t_channel_adap_out_endofpacket)    //      .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_fabric_t2h_channel_adap t2h_channel_adap (
		.clk               (clk_clk),               //   clk.clk
		.reset_n           (~reset_reset),          // reset.reset_n
		.in_ready          (mux_out_ready),         //    in.ready
		.in_valid          (mux_out_valid),         //      .valid
		.in_data           (mux_out_data),          //      .data
		.in_channel        (mux_out_channel),       //      .channel
		.in_startofpacket  (mux_out_startofpacket), //      .startofpacket
		.in_endofpacket    (mux_out_endofpacket),   //      .endofpacket
		.out_ready         (t2h_ready),             //   out.ready
		.out_valid         (t2h_valid),             //      .valid
		.out_data          (t2h_data),              //      .data
		.out_channel       (t2h_channel),           //      .channel
		.out_startofpacket (t2h_startofpacket),     //      .startofpacket
		.out_endofpacket   (t2h_endofpacket)        //      .endofpacket
	);

	DE1_SoC_QSYS_trace_system_0_fabric_mgmt_channel_adap mgmt_channel_adap (
		.clk         (clk_clk),                       //   clk.clk
		.reset_n     (~reset_reset),                  // reset.reset_n
		.in_ready    (mgmt_time_adap_out_ready),      //    in.ready
		.in_valid    (mgmt_time_adap_out_valid),      //      .valid
		.in_data     (mgmt_time_adap_out_data),       //      .data
		.in_channel  (mgmt_time_adap_out_channel),    //      .channel
		.out_ready   (mgmt_channel_adap_out_ready),   //   out.ready
		.out_valid   (mgmt_channel_adap_out_valid),   //      .valid
		.out_data    (mgmt_channel_adap_out_data),    //      .data
		.out_channel (mgmt_channel_adap_out_channel)  //      .channel
	);

	DE1_SoC_QSYS_trace_system_0_fabric_mgmt_time_adap mgmt_time_adap (
		.clk         (clk_clk),                    //   clk.clk
		.reset_n     (~reset_reset),               // reset.reset_n
		.in_valid    (mgmt_valid),                 //    in.valid
		.in_data     (mgmt_data),                  //      .data
		.in_channel  (mgmt_channel),               //      .channel
		.out_valid   (mgmt_time_adap_out_valid),   //   out.valid
		.out_data    (mgmt_time_adap_out_data),    //      .data
		.out_channel (mgmt_time_adap_out_channel), //      .channel
		.out_ready   (mgmt_time_adap_out_ready)    //      .ready
	);

	DE1_SoC_QSYS_trace_system_0_fabric_mgmt_demux_port_adap rst_chan_adap0 (
		.clk        (clk_clk),                  //   clk.clk
		.reset_n    (~reset_reset),             // reset.reset_n
		.in_ready   (mgmt_demux_out1_ready),    //    in.ready
		.in_valid   (mgmt_demux_out1_valid),    //      .valid
		.in_data    (mgmt_demux_out1_data),     //      .data
		.in_channel (mgmt_demux_out1_channel),  //      .channel
		.out_ready  (rst_chan_adap0_out_ready), //   out.ready
		.out_valid  (rst_chan_adap0_out_valid), //      .valid
		.out_data   (rst_chan_adap0_out_data)   //      .data
	);

	altera_mgmt_reset mgmt_reset_0 (
		.clk         (clk_clk),                  //          clk.clk
		.reset       (reset_reset),              //        reset.reset
		.mgmt_data   (rst_chan_adap0_out_data),  //         mgmt.data
		.mgmt_valid  (rst_chan_adap0_out_valid), //             .valid
		.mgmt_ready  (rst_chan_adap0_out_ready), //             .ready
		.agent_reset (reset_0_reset)             // reset_source.reset
	);

endmodule
